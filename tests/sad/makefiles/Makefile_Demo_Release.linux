
INCLUDE= -I../../include -I../../include/primitives -I../../include/templates -I../../include/png -I../../include/tga -I../../include/extra -I../../include/config 
PLATFORM = LINUX
TYPE =  release

EXECUTABLE = tests-sad

ifeq ($(PLATFORM),WIN32)
LDFLAGS= -L../../lib -lsaddy-$(TYPE) -lm -lopengl32  -lglu32 -lkernel32 -luser32 -lgdi32 -lwinspool  -lshell32 -lcomdlg32 -ladvapi32 -O2
DEFINES  = -DWIN32 -DMINGW
OUTPUT   = ../../bin/$(EXECUTABLE)-$(TYPE).exe
else
LDFLAGS= -L../../lib -lsaddy-$(TYPE) -L/usr/X11R6/lib -lm -lrt -lGL -lGLU -lpthread -lX11
DEFINES  = -DUNIX -DLINUX -DGCC
OUTPUT   = ../../bin/$(EXECUTABLE)-$(TYPE)
endif

ifeq ($(TYPE),debug)
CCOPTS = -g
else
CCOPTS = -O2
endif

BUILD    = build/matrix2x2_$(TYPE).o build/sadptrhash_$(TYPE).o build/main_$(TYPE).o build/sadrect_$(TYPE).o build/sadthread_$(TYPE).o build/object_$(TYPE).o build/sadmutexscopedlock_$(TYPE).o build/sadsemaphore_$(TYPE).o
all: build ../../lib/libsaddy-$(TYPE).a $(OUTPUT)
build:
	mkdir build
../../lib/libsaddy-$(TYPE).a:
	echo "You forgot to build a library!"
$(OUTPUT): build/matrix2x2_$(TYPE).o build/sadptrhash_$(TYPE).o build/main_$(TYPE).o build/sadrect_$(TYPE).o build/sadthread_$(TYPE).o build/object_$(TYPE).o build/sadmutexscopedlock_$(TYPE).o build/sadsemaphore_$(TYPE).o
	g++ $(BUILD)   $(CCOPTS)  -o  $(OUTPUT)    $(LDFLAGS)
build/matrix2x2_$(TYPE).o: matrix2x2.cpp
	g++ -c $(CCOPTS) matrix2x2.cpp -o build/matrix2x2_$(TYPE).o $(INCLUDE) $(DEFINES)
build/sadptrhash_$(TYPE).o: sadptrhash.cpp
	g++ -c $(CCOPTS) sadptrhash.cpp -o build/sadptrhash_$(TYPE).o $(INCLUDE) $(DEFINES)
build/main_$(TYPE).o: main.cpp
	g++ -c $(CCOPTS) main.cpp -o build/main_$(TYPE).o $(INCLUDE) $(DEFINES)
build/sadrect_$(TYPE).o: sadrect.cpp
	g++ -c $(CCOPTS) sadrect.cpp -o build/sadrect_$(TYPE).o $(INCLUDE) $(DEFINES)
build/sadthread_$(TYPE).o: sadthread.cpp
	g++ -c $(CCOPTS) sadthread.cpp -o build/sadthread_$(TYPE).o $(INCLUDE) $(DEFINES)
build/object_$(TYPE).o: object.cpp
	g++ -c $(CCOPTS) object.cpp -o build/object_$(TYPE).o $(INCLUDE) $(DEFINES)
build/sadmutexscopedlock_$(TYPE).o: sadmutexscopedlock.cpp
	g++ -c $(CCOPTS) sadmutexscopedlock.cpp -o build/sadmutexscopedlock_$(TYPE).o $(INCLUDE) $(DEFINES)
build/sadsemaphore_$(TYPE).o: sadsemaphore.cpp
	g++ -c $(CCOPTS) sadsemaphore.cpp -o build/sadsemaphore_$(TYPE).o $(INCLUDE) $(DEFINES)
clean:
ifeq ($(PLATFORM),WIN32)
	rd /s/q "build/*"
	del "$(OUTPUT)"
else
	rm -r ".build/*"
	rm "$(OUTPUT)"
endif
.PHONY: all clean