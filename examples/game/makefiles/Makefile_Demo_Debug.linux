
INCLUDE= -I../../include -I../../include/primitives -I../../include/templates -I../../include/png -I../../include/tga -I../../include/extra -I../../include/config 
PLATFORM = LINUX
TYPE =  debug

EXECUTABLE = saddy-test

ifeq ($(PLATFORM),WIN32)
LDFLAGS= -L../../lib -lsaddy-$(TYPE) -lm -lopengl32  -lglu32 -lkernel32 -luser32 -lgdi32 -lwinspool  -lshell32 -lcomdlg32 -ladvapi32 -O2
DEFINES  = -DWIN32 -DMINGW
OUTPUT   = ../../bin/$(EXECUTABLE)-$(TYPE).exe
else
LDFLAGS= -L../../lib -lsaddy-$(TYPE) -L/usr/X11R6/lib -lm -lGL -lGLU -lpthread -lX11
DEFINES  = -DUNIX -DLINUX -DGCC
OUTPUT   = ../../bin/$(EXECUTABLE)-$(TYPE)
endif

ifeq ($(TYPE),debug)
CCOPTS = -g
else
CCOPTS = -O2
endif

BUILD    = build/abstractautomaticgun_$(TYPE).o build/bonus_$(TYPE).o build/constants_$(TYPE).o build/enemy_$(TYPE).o build/enemybullet_$(TYPE).o build/enemyspawn_$(TYPE).o build/game_$(TYPE).o build/gameobject_$(TYPE).o build/main_$(TYPE).o build/player_$(TYPE).o build/playerbullet_$(TYPE).o build/shootingenemy_$(TYPE).o build/startscreenrain_$(TYPE).o build/supershootingenemy_$(TYPE).o
all: build ../../lib/libsaddy-$(TYPE).a $(OUTPUT)
build:
	mkdir build
../../lib/libsaddy-$(TYPE).a:
	echo "You forgot to build a library!"
$(OUTPUT): build/abstractautomaticgun_$(TYPE).o build/bonus_$(TYPE).o build/constants_$(TYPE).o build/enemy_$(TYPE).o build/enemybullet_$(TYPE).o build/enemyspawn_$(TYPE).o build/game_$(TYPE).o build/gameobject_$(TYPE).o build/main_$(TYPE).o build/player_$(TYPE).o build/playerbullet_$(TYPE).o build/shootingenemy_$(TYPE).o build/startscreenrain_$(TYPE).o build/supershootingenemy_$(TYPE).o
	g++ $(BUILD)   $(CCOPTS)  -o  $(OUTPUT)    $(LDFLAGS)
build/abstractautomaticgun_$(TYPE).o: abstractautomaticgun.cpp
	g++ -c $(CCOPTS) abstractautomaticgun.cpp -o build/abstractautomaticgun_$(TYPE).o $(INCLUDE) $(DEFINES)
build/bonus_$(TYPE).o: bonus.cpp
	g++ -c $(CCOPTS) bonus.cpp -o build/bonus_$(TYPE).o $(INCLUDE) $(DEFINES)
build/constants_$(TYPE).o: constants.cpp
	g++ -c $(CCOPTS) constants.cpp -o build/constants_$(TYPE).o $(INCLUDE) $(DEFINES)
build/enemy_$(TYPE).o: enemy.cpp
	g++ -c $(CCOPTS) enemy.cpp -o build/enemy_$(TYPE).o $(INCLUDE) $(DEFINES)
build/enemybullet_$(TYPE).o: enemybullet.cpp
	g++ -c $(CCOPTS) enemybullet.cpp -o build/enemybullet_$(TYPE).o $(INCLUDE) $(DEFINES)
build/enemyspawn_$(TYPE).o: enemyspawn.cpp
	g++ -c $(CCOPTS) enemyspawn.cpp -o build/enemyspawn_$(TYPE).o $(INCLUDE) $(DEFINES)
build/game_$(TYPE).o: game.cpp
	g++ -c $(CCOPTS) game.cpp -o build/game_$(TYPE).o $(INCLUDE) $(DEFINES)
build/gameobject_$(TYPE).o: gameobject.cpp
	g++ -c $(CCOPTS) gameobject.cpp -o build/gameobject_$(TYPE).o $(INCLUDE) $(DEFINES)
build/main_$(TYPE).o: main.cpp
	g++ -c $(CCOPTS) main.cpp -o build/main_$(TYPE).o $(INCLUDE) $(DEFINES)
build/player_$(TYPE).o: player.cpp
	g++ -c $(CCOPTS) player.cpp -o build/player_$(TYPE).o $(INCLUDE) $(DEFINES)
build/playerbullet_$(TYPE).o: playerbullet.cpp
	g++ -c $(CCOPTS) playerbullet.cpp -o build/playerbullet_$(TYPE).o $(INCLUDE) $(DEFINES)
build/shootingenemy_$(TYPE).o: shootingenemy.cpp
	g++ -c $(CCOPTS) shootingenemy.cpp -o build/shootingenemy_$(TYPE).o $(INCLUDE) $(DEFINES)
build/startscreenrain_$(TYPE).o: startscreenrain.cpp
	g++ -c $(CCOPTS) startscreenrain.cpp -o build/startscreenrain_$(TYPE).o $(INCLUDE) $(DEFINES)
build/supershootingenemy_$(TYPE).o: supershootingenemy.cpp
	g++ -c $(CCOPTS) supershootingenemy.cpp -o build/supershootingenemy_$(TYPE).o $(INCLUDE) $(DEFINES)
clean:
ifeq ($(PLATFORM),WIN32)
	rd /s/q "build/*"
	del "$(OUTPUT)"
else
	rm -r ".build/*"
	rm "$(OUTPUT)"
endif
.PHONY: all clean